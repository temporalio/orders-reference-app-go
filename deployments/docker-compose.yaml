services:
  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:16
    volumes:
      - /var/lib/postgresql/data
  temporal:
    container_name: temporal
    depends_on:
      - postgresql
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
    image: temporalio/auto-setup:1.23.1
    ports:
      - 7233:7233
  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.23.1
    stdin_open: true
    tty: true
  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
      - TEMPORAL_CODEC_ENDPOINT=http://localhost:8089
    image: temporalio/ui:2.26.2
    ports:
      - 8080:8080
  app:
    build:
      context: ../
      target: dev-server
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - BIND_ON_IP=0.0.0.0
      - BILLING_API_PORT=8081
      - ORDER_API_PORT=8082
      - SHIPMENT_API_PORT=8083
      - FRAUD_API_PORT=8084
    command: ["dev-server", "-k", "supersecretkey"]
    restart: on-failure
  codec-server:
    build:
      context: ../
      target: dev-server
    command: ["codec-server", "-p", "8089", "-u", "http://localhost:8080"]
    ports:
      - "8089:8089"
    restart: on-failure
  web:
    build:
      context: ../
      target: web
    depends_on:
      - temporal
    environment:
      - ORIGIN=http://localhost:3000
      - BILLING_API_URL=http://app:8081
      - ORDER_API_URL=http://app:8082
      - SHIPMENT_API_URL=http://app:8083
      - FRAUD_API_URL=http://app:8084
    ports:
      - "3000:3000"
    restart: on-failure